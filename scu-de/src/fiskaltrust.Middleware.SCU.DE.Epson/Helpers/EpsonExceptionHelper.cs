using fiskaltrust.Middleware.SCU.DE.Epson.Exceptions;
using fiskaltrust.Middleware.SCU.DE.Epson.Models;

namespace fiskaltrust.Middleware.SCU.DE.Swissbit.Interop.Helpers
{
    public static class EpsonExceptionHelper
    {
        public static void ThrowError(EpsonError errorCode)
        {
            throw errorCode switch
            {
                EpsonError.UNKOWN => new EpsonException("Unkown errorcode", errorCode),
                EpsonError.DEVICE_NOT_FOUND => new EpsonException("The specified device does not exist.", errorCode),
                EpsonError.DEVICE_IN_USE => new EpsonException("The specified device is in use.", errorCode),
                EpsonError.DEVICE_OPEN_ERROR => new EpsonException("Failed to open the specified device.", errorCode),
                EpsonError.DEVICE_ERROR => new EpsonException("Error occurred in the device control script.", errorCode),
                EpsonError.SYSTEM_ERROR => new EpsonException("A system error occurred.", errorCode),
                EpsonError.DEVICE_TYPE_INVALID => new EpsonException("The device type of the specified device is different.", errorCode),
                EpsonError.PARAM_ERROR => new EpsonException("A parameter error occurred.", errorCode),
                EpsonError.JSON_ERROR_NOT_ENOUGH_CONTENTS => new EpsonException("Inadequate JSON message contents (missing parameter, etc.)", errorCode),
                EpsonError.JSON_ERROR_UNEXPECTED_PARAM_TYPE => new EpsonException("Incorrect JSON message parameter data type", errorCode),
                EpsonError.JSON_ERROR_OVER_DATA_SIZE => new EpsonException("JSON message size exceeds the maximum value supported (64 KB)", errorCode),
                EpsonError.JSON_ERROR_INVALID_PARAMETER_RANGE => new EpsonException("JSON message parameters are outside their valid range", errorCode),
                EpsonError.JSON_ERROR_INVALID_PARAMETER => new EpsonException("Invalid parameter", errorCode),
                EpsonError.JSON_ERROR_INVALID_TIME_FORMAT => new EpsonException("Invalid (not supported) timestamp format for a specified JSON message parameter", errorCode),
                EpsonError.JSON_ERROR_UNEXPECTED_STORAGE_TYPE => new EpsonException("Unexpected (not supported) \"storage\" \"type\" specified by a JSON message parameter", errorCode),
                EpsonError.JSON_ERROR_UNEXPECTED_STORAGE_VENDOR => new EpsonException("Unexpected (not supported) \"storage\" \"vendor\" specified by a JSON message parameter", errorCode),
                EpsonError.JSON_ERROR_UNEXPECTED_FUNCTION => new EpsonException("Unexpected \"function\" specified by a JSON message parameter", errorCode),
                EpsonError.JSON_ERROR_UNEXPECTED_COMPRESSION_TYPE => new EpsonException("Unexpected (not supported) \"compress\" \"type\" specified by a JSON message parameter", errorCode),
                EpsonError.JSON_ERROR_WRONG_JSON_FORMAT => new EpsonException("JSON message is not in JSON format", errorCode),
                EpsonError.OTHER_ERROR_UNKNOWN_STORAGE => new EpsonException("Inserted storage is not a supported German fiscal element (TSE)", errorCode),
                EpsonError.OTHER_ERROR_NO_STORAGE_FOUND => new EpsonException("No valid storage is inserted", errorCode),
                EpsonError.OTHER_ERROR_UPDATE_SYSTIME_FAIL => new EpsonException("Failed to update the printer time", errorCode),
                EpsonError.OTHER_ERROR_INVALID_ADMIN_USER_ID => new EpsonException("A user ID with Admin privileges besides \"Administrator\" was specified", errorCode),
                EpsonError.OTHER_ERROR_HOST_AUTHENTICATION_FAILED => new EpsonException("Failed to authenticate the host", errorCode),
                EpsonError.OTHER_ERROR_UNAUTHENTICATED_TIME_ADMIN_USER => new EpsonException("A request was received from an unauthenticated (not logged -in) user with TimeAdmin privileges", errorCode),
                EpsonError.OTHER_ERROR_UNAUTHENTICATED_ADMIN_USER => new EpsonException("A request was received from an unauthenticated (not logged -in) user with Admin privileges", errorCode),
                EpsonError.OTHER_ERROR_UNAUTHENTICATED_USER => new EpsonException("A request was received from a user not authenticated with Admin or TimeAdmin privileges", errorCode),
                EpsonError.OTHER_ERROR_UNAUTHENTICATED_HOST => new EpsonException("A request was received from an unauthenticated (not logged -in) host", errorCode),
                EpsonError.OTHER_ERROR_CURRENTLY_EXPORTING => new EpsonException("Another request was received while in export status", errorCode),
                EpsonError.OTHER_ERROR_NO_EXPORT_STARTED => new EpsonException("A request was received that can only be executed in export status while not in export status(export not started)", errorCode),
                EpsonError.OTHER_ERROR_CURRENTLY_EXPORTING_USER => new EpsonException("The user ID who is currently exporting has logged out", errorCode),
                EpsonError.OTHER_ERROR_NO_TIME_SET_BEFORE_EXPORT => new EpsonException("German fiscal element (TSE) time was not updated before starting the export", errorCode),
                EpsonError.OTHER_ERROR_ALREADY_ALL_DATA_EXPORTED => new EpsonException("An export data acquisition request was received when all export data had been acquired", errorCode),
                EpsonError.OTHER_ERROR_ALL_DATA_NOT_EXPORTED_YET => new EpsonException("An export end request was received when all export data had not been acquired", errorCode),
                EpsonError.OTHER_ERROR_TSE_ALREADY_SET_UP => new EpsonException("Another set-up request was received for a German fiscal element (TSE) that is already set - up", errorCode),
                EpsonError.OTHER_ERROR_SECRETKEY_REGISTRATION => new EpsonException("Failed to register the secret key", errorCode),
                EpsonError.OTHER_ERROR_PARAMETER_MISMATCH => new EpsonException("Incorrect parameters entered to specify the export range", errorCode),
                EpsonError.OTHER_ERROR_TOO_MANY_TIME_ADMIN_USER_LOGGED_IN => new EpsonException("The number of users (clients) logged in with TimeAdmin privileges exceeds the upper limit", errorCode),
                EpsonError.OTHER_ERROR_TOO_MANY_CHALLENGE_REQUESTED => new EpsonException("The number of users requesting the challenge exceeds the upper limit", errorCode),
                EpsonError.OTHER_ERROR_NO_MEMORY => new EpsonException("Memory overflow error. This does not normally occur.", errorCode),
                EpsonError.OTHER_ERROR_FATAL => new EpsonException("Fatal error due to an unexpected event (mainly at the German fiscal element(TSE) side).This does not normally occur.", errorCode),
                EpsonError.TSE1_ERROR_INVALID_PARAMETER => new EpsonException("Invalid input parameter.", errorCode),
                EpsonError.TSE1_ERROR_NO_TSE => new EpsonException("No German fiscal element (TSE) was found at the provided path.", errorCode),
                EpsonError.TSE1_ERROR_IO => new EpsonException("No German fiscal element (TSE) detected (inserted) when a command request arrived", errorCode),
                EpsonError.TSE1_ERROR_TIMEOUT => new EpsonException("The operation timed out", errorCode),
                EpsonError.TSE1_ERROR_OUTOFMEM => new EpsonException("A location was accessed that is outside the memory", errorCode),
                EpsonError.TSE1_ERROR_INVALID_RESPONSE => new EpsonException("No correct response from German fiscal element (TSE)", errorCode),
                EpsonError.TSE1_ERROR_STORE_FULL_INTERNAL => new EpsonException("German fiscal element (TSE) is internally full.", errorCode),
                EpsonError.TSE1_ERROR_RESPONSE_MISSING => new EpsonException("This happens if two commands are sent at the same time or if a command is not allowed in the current state.", errorCode),
                EpsonError.TSE1_ERROR_EXPORT_NOT_INITIALIZED => new EpsonException("German fiscal element (TSE) Store not initialized.", errorCode),
                EpsonError.TSE1_ERROR_EXPORT_FAILED => new EpsonException("Export Failed.", errorCode),
                EpsonError.TSE1_ERROR_POWER_CYCLE_DETECTED => new EpsonException("A power cycle occurred during command execution.", errorCode),
                EpsonError.TSE1_ERROR_FIRMWARE_UPDATE_NOT_APPLIED => new EpsonException("The firmware update was not properly applied.", errorCode),
                EpsonError.TSE1_ERROR_FROM_TSE_FIRS => new EpsonException("Lowest error code that might be raised from the German fiscal element(TSE).", errorCode),
                EpsonError.TSE1_ERROR_UNKNOWN => new EpsonException("Unspecified, internal processing error.", errorCode),
                EpsonError.TSE1_ERROR_NO_TIME_SET => new EpsonException("Time not set.", errorCode),
                EpsonError.TSE1_ERROR_NO_TRANSACTION_IN_PROGRESS => new EpsonException("No transaction in progress.", errorCode),
                EpsonError.TSE1_ERROR_INVALID_CMD_SYNTAX => new EpsonException("Wrong command length.", errorCode),
                EpsonError.TSE1_ERROR_NOT_ENOUGH_DATA_WRITTEN => new EpsonException("Not enough data written during transaction.", errorCode),
                EpsonError.TSE1_ERROR_TSE_INVALID_PARAMETER => new EpsonException("Invalid Parameter.", errorCode),
                EpsonError.TSE1_ERROR_TRANSACTION_NOT_STARTED => new EpsonException("Given transaction is not started.", errorCode),
                EpsonError.TSE1_ERROR_MAX_PARALLEL_TRANSACTIONS => new EpsonException("Maximum parallel transactions reached.", errorCode),
                EpsonError.TSE1_ERROR_CERTIFICATE_EXPIRED => new EpsonException("Certificate expired.", errorCode),
                EpsonError.TSE1_ERROR_NO_LAST_TRANSACTION => new EpsonException("No last transaction to fetch.", errorCode),
                EpsonError.TSE1_ERROR_CMD_NOT_ALLOWED => new EpsonException("Command not allowed in current state.", errorCode),
                EpsonError.TSE1_ERROR_TRANSACTION_SIGNATURES_EXCEEDED => new EpsonException("Signatures exceeded.", errorCode),
                EpsonError.TSE1_ERROR_NOT_AUTHORIZED => new EpsonException("Not authorized.", errorCode),
                EpsonError.TSE1_ERROR_MAX_REGISTERED_CLIENTS_REACHED => new EpsonException("Maximum registered clients reached.", errorCode),
                EpsonError.TSE1_ERROR_CLIENT_NOT_REGISTERED => new EpsonException("Client not registered.", errorCode),
                EpsonError.TSE1_ERROR_EXPORT_UNACKNOWLEDGED_DATA => new EpsonException("Failed to delete, data not completely exported.", errorCode),
                EpsonError.TSE1_ERROR_CLIENT_HAS_UNFINISHED_TRANSACTIONS => new EpsonException("Failed to deregister, client has unfinished transactions.", errorCode),
                EpsonError.TSE1_ERROR_TSE_HAS_UNFINISHED_TRANSACTIONS => new EpsonException("Failed to decommission, German fiscal element (TSE) has unfinished transactions", errorCode),
                EpsonError.TSE1_ERROR_TSE_NO_RESPONSE_TO_FETCH => new EpsonException("Wrong state, there is no response to fetch.", errorCode),
                EpsonError.TSE1_ERROR_NOT_ALLOWED_EXPORT_IN_PROGRES => new EpsonException("Wrong state, ongoing Filtered Export must be finished before this command is allowed.", errorCode),
                EpsonError.TSE1_ERROR_STORE_FULL => new EpsonException("Operation failed, not enough remaining capacity in German fiscal element(TSE) Store.", errorCode),
                EpsonError.TSE1_ERROR_WRONG_STATE_NEEDS_PUK_CHANGE => new EpsonException("Wrong state, changed PUK required.", errorCode),
                EpsonError.TSE1_ERROR_WRONG_STATE_NEEDS_PIN_CHANGE => new EpsonException("Wrong state, changed PIN required.", errorCode),
                EpsonError.TSE1_ERROR_WRONG_STATE_NEEDS_TSE_UNLOCK => new EpsonException("Wrong state, unlocked German fiscal element (TSE) required.", errorCode),
                EpsonError.TSE1_ERROR_WRONG_STATE_NEEDS_SELF_TEST => new EpsonException("Wrong state, self test must be run first.", errorCode),
                EpsonError.TSE1_ERROR_WRONG_STATE_NEEDS_SELF_TEST_PASSED => new EpsonException("Wrong state, passed self test required.", errorCode),
                EpsonError.TSE1_ERROR_FWU_INTEGRITY_FAILURE => new EpsonException("Firmware Update: Integrity check failed.", errorCode),
                EpsonError.TSE1_ERROR_FWU_DECRYPTION_FAILURE => new EpsonException("Firmware Update: Decryption failed.", errorCode),
                EpsonError.TSE1_ERROR_FWU_WRONG_FORMAT => new EpsonException("Firmware Update: Wrong format.", errorCode),
                EpsonError.TSE1_ERROR_FWU_INTERNAL_ERROR => new EpsonException("Firmware Update: Internal error.", errorCode),
                EpsonError.TSE1_ERROR_FWU_DOWNGRADE_PROHIBITED => new EpsonException("Firmware Update: downgrade prohibited.", errorCode),
                EpsonError.TSE1_ERROR_TSE_ALREADY_INITIALIZED => new EpsonException("German fiscal element (TSE) already initialized.", errorCode),
                EpsonError.TSE1_ERROR_TSE_DECOMMISSIONED => new EpsonException("German fiscal element (TSE) decommissioned.", errorCode),
                EpsonError.TSE1_ERROR_TSE_NOT_INITIALIZED => new EpsonException("German fiscal element (TSE) not initialized.", errorCode),
                EpsonError.TSE1_ERROR_AUTHENTICATION_FAILED => new EpsonException("Authentication B90:C90failed.", errorCode),
                EpsonError.TSE1_ERROR_AUTHENTICATION_PIN_BLOCKED => new EpsonException("PIN is blocked.", errorCode),
                EpsonError.TSE1_ERROR_AUTHENTICATION_USER_NOT_LOGGED_IN => new EpsonException("Given user is not authenticated.", errorCode),
                EpsonError.TSE1_ERROR_SELF_TEST_FAILED_FW => new EpsonException("Self test of FW failed.", errorCode),
                EpsonError.TSE1_ERROR_SELF_TEST_FAILED_CSP => new EpsonException("Self test of CSP failed.", errorCode),
                EpsonError.TSE1_ERROR_SELF_TEST_FAILED_RNG => new EpsonException("Self test of RNG failed.", errorCode),
                EpsonError.TSE1_ERROR_FWU_BASE_FW_ERROR => new EpsonException("Firmware Update: Base FW update error.", errorCode),
                EpsonError.TSE1_ERROR_FWU_FWEXT_ERROR => new EpsonException("Firmware Update: FW Extension update error.", errorCode),
                EpsonError.TSE1_ERROR_FWU_CSP_ERROR => new EpsonException("Firmware Update: CSP update error.", errorCode),
                EpsonError.TSE1_ERROR_EXPORT_NONE_IN_PROGRESS => new EpsonException("Filtered Export: no export in progress.", errorCode),
                EpsonError.TSE1_ERROR_EXPORT_RETRY => new EpsonException("Filtered Export: no new data, keep polling.", errorCode),
                EpsonError.TSE1_ERROR_EXPORT_NO_DATA_AVAILABLE => new EpsonException("Filtered Export: no matching entries, export would be empty.", errorCode),
                EpsonError.TSE1_ERROR_CMD_NOT_FOUND => new EpsonException("Command not found", errorCode),
                EpsonError.TSE1_ERROR_SIG_ERROR => new EpsonException("Signature creation error.", errorCode),
                EpsonError.TSE1_ERROR_FROM_TSE_LAST => new EpsonException("Highest error code that might be raised from the German fiscal element(TSE).", errorCode),
                EpsonError.TSE1_ERROR_RAISED_FROM_TSE => new EpsonException("Errors that raised from the German fiscal element (TSE) except for the above.", errorCode),
                _ => new EpsonException("Unkown errorcode", errorCode),
            };
        }
    }
}
